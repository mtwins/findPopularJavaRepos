import statistics as stat

repo_number = 0

final_metrics_commits = [2616,3043,2054,4836,14987,616,817,12055,735,1210,7027,3709,4147,6502,1464,1640,2955,1178,2195,3763,621,1308,1659,2803,35216,926,2364,1692,883,1370,1503,3197,861,26555,1733,3375,2335,1851,1854,1144,1154,8685,846,2044,2616,1363,3966,9641,1684,1960,1325,1565,6379,3378,1138,3556,593,979,728,6956,670,2070,1367,4770,5132,1259,765,764,2465,9302,1924,709,5207,6071,590,737,627,5013,981,3045,3080,2609,1364,2628,2735,4846,579,1035,518,4101,6928,945,2437,937,1696,1440,1872,4442,2067,574]
final_metrics_stars=[12400,16700,2800,4100,5800,3500,6200,3400,16100,22500,622,3600,2800,24800,21300,12600,5400,9900,7300,1500,4400,8400,27700,21100,4600,6500,2300,20000,12500,18200,4600,7300,13300,8900,5500,6500,4800,12900,10100,16600,11500,21500,9300,20300,32000,32100,4700,5900,10900,6300,5700,27900,4800,9200,9000,3600,9200,7600,7400,3300,405,34300,9500,2800,9300,14300,5200,21900,3300,15600,39100,26500,12500,7100,26100,54300,6900,5500,748,11000,7500,3700,7500,26000,3900,12000,10800,2200,19600,5900,17800,7800,295,2700,3400,3300,20700,1900,2200,6900]
final_metrics_forks = [1600,3800,276,1100,688,625,1900,1800,3200,4800,287,764,756,7900,6300,2200,1100,1400,3100,164,536,2600,6100,6100,747,1200,418,8500,2900,4000,648,378,2500,1600,1900,553,1200,2900,3600,6600,2100,5200,1200,7000,5800,5100,731,1400,3400,1400,1000,3400,1300,1400,1700,1100,1700,1600,1800,2000,59,8600,1100,1500,3200,3500,14100,5800,414,1900,7000,7100,1900,1800,10100,23100,3300,2600,364,2500,1800,1200,996,9500,1500,3300,3000,588,3000,1500,4300,637,1600,805,1000,302,6400,374,836,1400]


def calc_metrics(metrics):
    print("mean: " + str(stat.mean(metrics)))
    print("median: " + str(stat.median(metrics)))
    print("multimode: " + str(stat.multimode(metrics)))
    print("varience: " + str(stat.variance(metrics)))
    print("stdev: " + str(stat.stdev(metrics)))
    print("quantiles: " + str(stat.quantiles(metrics)))


if __name__ == '__main__':
    print("\nCommits")
    calc_metrics(final_metrics_commits)
    print("\n\nStars")
    calc_metrics(final_metrics_stars)
    print("\n\nForks")
    calc_metrics(final_metrics_forks)